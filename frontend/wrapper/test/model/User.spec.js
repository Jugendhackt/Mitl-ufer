/**
 * Mitl-ufer public API
 * This is the public API of Mitl-ufer
 *
 * OpenAPI spec version: 1.0.0
 * Contact: tobrohl@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MitlUferPublicApi);
  }
}(this, function(expect, MitlUferPublicApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MitlUferPublicApi.User();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('User', function() {
    it('should create an instance of User', function() {
      // uncomment below and update the code to test User
      //var instance = new MitlUferPublicApi.User();
      //expect(instance).to.be.a(MitlUferPublicApi.User);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new MitlUferPublicApi.User();
      //expect(instance).to.be();
    });

    it('should have the property laufort (base name: "laufort")', function() {
      // uncomment below and update the code to test the property laufort
      //var instance = new MitlUferPublicApi.User();
      //expect(instance).to.be();
    });

    it('should have the property eMail (base name: "eMail")', function() {
      // uncomment below and update the code to test the property eMail
      //var instance = new MitlUferPublicApi.User();
      //expect(instance).to.be();
    });

    it('should have the property geburtsdatum (base name: "geburtsdatum")', function() {
      // uncomment below and update the code to test the property geburtsdatum
      //var instance = new MitlUferPublicApi.User();
      //expect(instance).to.be();
    });

    it('should have the property laufniveau (base name: "laufniveau")', function() {
      // uncomment below and update the code to test the property laufniveau
      //var instance = new MitlUferPublicApi.User();
      //expect(instance).to.be();
    });

    it('should have the property geschlecht (base name: "geschlecht")', function() {
      // uncomment below and update the code to test the property geschlecht
      //var instance = new MitlUferPublicApi.User();
      //expect(instance).to.be();
    });

    it('should have the property ziel (base name: "ziel")', function() {
      // uncomment below and update the code to test the property ziel
      //var instance = new MitlUferPublicApi.User();
      //expect(instance).to.be();
    });

    it('should have the property profilbild (base name: "profilbild")', function() {
      // uncomment below and update the code to test the property profilbild
      //var instance = new MitlUferPublicApi.User();
      //expect(instance).to.be();
    });

  });

}));
